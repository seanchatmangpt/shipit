[build-system]  # https://python-poetry.org/docs/pyproject/#poetry-and-pep-517
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]  # https://python-poetry.org/docs/pyproject/
name = "shipit"
version = "0.0.0"
description = "A command-line interface for managing SHIPIT journal entries and project tracking."
authors = ["Sean Chatman <info@chatmangpt.com>"]
readme = "README.md"
repository = "https://github.com/chatmangpt/shipit"

[tool.poetry.scripts]  # https://python-poetry.org/docs/pyproject/#scripts
shipit = "shipit.cli:app"

[tool.poetry.dependencies]  # https://python-poetry.org/docs/dependency-specification/
python = ">=3.11,<4.0"
typer = { extras = ["all"], version = ">=0.9.0" }
faker = "^20.0.3"
anyio = "3.7.1"
openai = "^1.3.0"
inflection = "^0.5.1"
aiofiles = "^23.2.1"
autopep8 = "^2.0.4"
loguru = "^0.7.2"
pyperclip = "^1.8.2"
icontract = "^2.6.5"
astor = "^0.8.1"
redbaron = "^0.9.2"
radon = "^6.0.1"
jinja2-time = "^0.2.0"
icalendar = "^5.0.11"
jupyter = "^1.0.0"
pytest-bdd = "^7.0.0"
sqlmodel = "^0.0.12"
factory-boy = "^3.3.0"
python-dateutil = "^2.8.2"
pytz = "^2023.3.post1"
tzlocal = "^5.2"
chromadb = "^0.4.17"
munch = "^4.0.0"
pyppeteer = "^1.0.2"
sismic = "^1.6.6"
duckduckgo-search = "^3.9.6"
aiohttp = "^3.9.0"
matplotlib = "^3.8.2"
pandas = "^2.1.3"
rdflib = "^7.0.0"
pyshacl = "^0.25.0"
gitpython = "^3.1.40"
python-multipart = "^0.0.6"
email-validator = "^2.1.0.post1"

[tool.poetry.group.test.dependencies]  # https://python-poetry.org/docs/master/managing-dependencies/
coverage = { extras = ["toml"], version = ">=7.2.5" }
mypy = ">=1.2.0"
poethepoet = ">=0.20.0"
pre-commit = ">=3.3.1"
pytest = ">=7.3.1"
pytest-clarity = ">=1.0.1"
pytest-mock = ">=3.10.0"
pytest-xdist = ">=3.2.1"
ruff = ">=0.1.3"

[tool.poetry.group.dev.dependencies]  # https://python-poetry.org/docs/master/managing-dependencies/
cruft = ">=2.14.0"
pdoc = ">=13.1.1"

[tool.coverage.report]  # https://coverage.readthedocs.io/en/latest/config.html#report
precision = 1
show_missing = true
skip_covered = true

[tool.coverage.run]  # https://coverage.readthedocs.io/en/latest/config.html#run
branch = true
command_line = "--module pytest"
data_file = "reports/.coverage"
source = ["src"]

[tool.coverage.xml]  # https://coverage.readthedocs.io/en/latest/config.html#xml
output = "reports/coverage.xml"

[tool.mypy]  # https://mypy.readthedocs.io/en/latest/config_file.html
junit_xml = "reports/mypy.xml"
ignore_missing_imports = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
warn_unreachable = true

[tool.pytest.ini_options]  # https://docs.pytest.org/en/latest/reference/reference.html#ini-options-ref
addopts = "--color=yes --doctest-modules --exitfirst --failed-first --verbosity=2 --junitxml=reports/pytest.xml"
testpaths = ["src", "tests"]
xfail_strict = true

[tool.ruff]  # https://github.com/charliermarsh/ruff
fix = true
ignore-init-module-imports = true
line-length = 100
select = ["A", "ASYNC", "B", "C4", "C90", "D", "DTZ", "E", "F", "FLY", "FURB", "I", "ISC", "LOG", "N", "NPY", "PERF", "PGH", "PIE", "PLC", "PLE", "PLR", "PLW", "PT", "RET", "RUF", "RSE", "SIM", "TID", "UP", "W", "YTT"]
ignore = ["E501", "PGH001", "PGH002", "PGH003", "RET504", "S101"]
unfixable = ["F401", "F841"]
src = ["src", "tests"]
target-version = "py311"

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.pydocstyle]
convention = "google"

[tool.poe.tasks]  # https://github.com/nat-n/poethepoet

  [tool.poe.tasks.docs]
  help = "Generate this package's docs"
  cmd = """
    pdoc
      --docformat $docformat
      --output-directory $outputdirectory
      shipit
    """

    [[tool.poe.tasks.docs.args]]
    help = "The docstring style (default: google)"
    name = "docformat"
    options = ["--docformat"]
    default = "google"

    [[tool.poe.tasks.docs.args]]
    help = "The output directory (default: docs)"
    name = "outputdirectory"
    options = ["--output-directory"]
    default = "docs"

  [tool.poe.tasks.lint]
  help = "Lint this package"

    [[tool.poe.tasks.lint.sequence]]
    cmd = """
      pre-commit run
        --all-files
        --color always
      """

  [tool.poe.tasks.test]
  help = "Test this package"

    [[tool.poe.tasks.test.sequence]]
    cmd = "coverage run"

    [[tool.poe.tasks.test.sequence]]
    cmd = "coverage report"

    [[tool.poe.tasks.test.sequence]]
    cmd = "coverage xml"
